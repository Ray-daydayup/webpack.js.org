(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{391:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://npmjs.com/package/exports-loader"><img src="https://img.shields.io/npm/v/exports-loader.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/exports-loader.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/exports-loader"><img src="https://david-dm.org/webpack-contrib/exports-loader.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/exports-loader/actions"><img src="https://github.com/webpack-contrib/exports-loader/workflows/exports-loader/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/exports-loader"><img src="https://codecov.io/gh/webpack-contrib/exports-loader/branch/master/graph/badge.svg" alt="coverage"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://badges.gitter.im/webpack/webpack.svg" alt="chat"></a>\n<a href=""><img src="https://packagephobia.now.sh/badge?p=exports-loader" alt="size"></a></p>\n<p>Allow to setup custom exports <code>module.exports</code>/<code>export</code> for modules.</p>\n<blockquote>\n<p>âš  Be careful, existing exports (<code>module.exports</code>/<code>exports</code>) will be overwritten.</p>\n</blockquote>\n<h2 id="getting-started">Getting Started<a href="#getting-started" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>To begin, you\'ll need to install <code>exports-loader</code>:</p>\n<pre><code class="hljs language-console">$ npm install exports-loader --save-dev\n</code></pre>\n<h3 id="inline">Inline<a href="#inline" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Then add the loader to the desired <code>require</code> calls. For example:</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> myFunction <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'exports-loader?myFunction!./file.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// module.exports = exports = { \'myFunction\': myFunction };</span>\n\n<span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token string">\'Hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span>\n  myVariable<span class="token punctuation">,</span>\n  myFunction<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'exports-loader?myVariable,myFunction=helpers.parse!./file.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// module.exports = exports = { \'myVariable\' : myVariable, \'myFunction\': helpers.parse };</span>\n\n<span class="token keyword">const</span> newVariable <span class="token operator">=</span> myVariable <span class="token operator">+</span> <span class="token string">\'!!!\'</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVariable<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token string">\'Hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> file <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'exports-loader?[name]!./file.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the file\'s source:</span>\n<span class="token comment">//</span>\n<span class="token comment">// module.exports = exports = { \'file\' : file };</span>\n\n<span class="token function">file</span><span class="token punctuation">(</span><span class="token string">\'string\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h3 id="using-configuration">Using Configuration<a href="#using-configuration" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// You can use `regexp`</span>\n        <span class="token comment">// test: /vendor\\.js/$</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/vendor.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'exports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          myFunction<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          myVariable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          myNestedFunction<span class="token punctuation">:</span> <span class="token string">\'lib.parse\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'[name]\'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>And run <code>webpack</code> via your preferred method.</p>\n<h2 id="contributing">Contributing<a href="#contributing" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Please take a moment to read our contributing guidelines if you haven\'t yet done so.</p>\n<p><a href="https://github.com/webpack-contrib/exports-loader/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/exports-loader/blob/master/LICENSE">MIT</a></p>\n'}}]);